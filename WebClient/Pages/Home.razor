@page "/"
@using Microsoft.AspNetCore.SignalR.Client
@using WebClient.Components
@inject IConfiguration configuration
@inject NavigationManager Navigation
@inject IJSRuntime _jsRuntime;

<PageTitle>Chart</PageTitle>



@if (!isLoading)
{
    <BitcoinRateCard HubConnection="hubConnection" />
    <h3>Welcome to the Bitcoin chart!</h3>
    
    <DepthChart HubConnection="hubConnection">

    </DepthChart>

    <div class="mt-2 d-flex gap-4">
        <MudGrid>
            <MudItem xs="5">
                <ExchangeCalculatorTable HubConnection="hubConnection">

                </ExchangeCalculatorTable>
            </MudItem>
            <MudItem xs="7">
                <MudCard>
                    <MudCardContent>
                        <BitcoinCandlestickGraph HubConnection="hubConnection">

                        </BitcoinCandlestickGraph>
                    </MudCardContent>
                </MudCard>
            </MudItem>
        </MudGrid>
    </div>
}

@code {
    private HubConnection hubConnection;

    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        string serverUrl = configuration.GetValue<string>("ServerUrl");

        hubConnection = new HubConnectionBuilder()
            .WithUrl(Navigation.ToAbsoluteUri($"{serverUrl}/messages"), options =>
            {
                options.AccessTokenProvider = async () =>
                {
                    var token = await _jsRuntime.InvokeAsync<string>("localStorage.getItem", "authToken");
                    return token;
                };
            })
            .WithAutomaticReconnect()
            .Build();

        await hubConnection.StartAsync();

        isLoading = false;
        StateHasChanged();
    }

}